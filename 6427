% 定义系统的状态空间矩阵 A 和 B
A = [-2 -1 0 0 0 0;
      1  0 0 0 0 0;
      0  0 -5 -4 0 0;
      0  0  1  0 0 0;
      0  0  0  0 -2 0;
      0  0  0  0  0 -2];
  
B = [1 0 0 0;
     0 0 0 0;
     0 1 0 0;
     0 0 0 0;
     0 0 1 0;
     0 0 0 1];

% 修改期望的闭环极点，避免完全相同的极点
desired_poles = [-3, -3.1, -3.2, -3.3, -3.4, -3.5];

% 选择矩阵 Q 为单位矩阵
Q = eye(size(A));

% 使用 place 函数计算反馈增益矩阵 K，使得 A - B * K 的极点位于 desired_poles
K = place(A, B, desired_poles);

% 定义闭环矩阵 A_cl = A - B * K
A_cl = A - B * K;

% 求解 Lyapunov 方程 (A_cl^T) * P + P * A_cl = -Q
P = lyap(A_cl', Q);

% 输出结果
disp('Lyapunov 方程求解的矩阵 P 为：');
disp(P);
disp('设计的反馈增益矩阵 K 为：');
disp(K);
